<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HL&#39;s Blog</title>
  <subtitle>Walk steps step by step</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-03-20T12:28:02.076Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>hailong.huang</name>
    <email>ryonhhl@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>swift常量与变量</title>
    <link href="http://yoursite.com/2016/03/20/swift%20-%20%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/"/>
    <id>http://yoursite.com/2016/03/20/swift - 常量与变量/</id>
    <published>2016-03-20T12:26:16.000Z</published>
    <updated>2016-03-20T12:28:02.076Z</updated>
    
    <content type="html">&lt;h1 id=&quot;常量-amp-变量&quot;&gt;&lt;a href=&quot;#常量-amp-变量&quot; class=&quot;headerlink&quot; title=&quot;常量&amp;amp;变量&quot;&gt;&lt;/a&gt;常量&amp;amp;变量&lt;/h1&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义变量： &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; ；&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(i)  &lt;span class=&quot;comment&quot;&gt;// i = 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; i = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; ；&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(i)  &lt;span class=&quot;comment&quot;&gt;// i = 30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 定义常量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// j = 30 常量声明完成后不可修改其值，这里如果写的话，编译器会直接报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(j)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;变量顾名思义就是可以改变的量,所以定义的变量是可以修改的。&lt;br&gt;swift 定义变量和常量 与 oc不同  swift中 直接用&lt;code&gt;var&lt;/code&gt;和 &lt;code&gt;let&lt;/code&gt;声明，不用声明变量和常量的基本数据类型。因为swift是编译时语言，在编译时会根据你声明的变量推断出你的变量或常量的数据类型,这里有一个名词叫 &lt;code&gt;类型推断&lt;/code&gt;, OC则是运行时语言,在运行时才会知道你声明的变量或常量的类型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;var&lt;/code&gt; 定义变量，设置之后可以修改&lt;/li&gt;
&lt;li&gt;&lt;code&gt;let&lt;/code&gt; 定义常量，设置之后不可以修改&lt;/li&gt;
&lt;li&gt;语句末尾不用使用 &lt;code&gt;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 Swift 中使用 &lt;code&gt;print()&lt;/code&gt; 替代 OC 中的 &lt;code&gt;NSLog&lt;/code&gt;,相比于OC的’NSLog’,swift的&lt;code&gt;print()&lt;/code&gt;性能会更好&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;定义-OC-对象&quot;&gt;&lt;a href=&quot;#定义-OC-对象&quot; class=&quot;headerlink&quot; title=&quot;定义 OC 对象&quot;&gt;&lt;/a&gt;定义 &lt;code&gt;OC&lt;/code&gt; 对象&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 实例化视图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; v = &lt;span class=&quot;type&quot;&gt;UIView&lt;/span&gt;(frame: &lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置背景颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v.backgroundColor = &lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;.redColor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 添加到根视图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;view.addSubview(v)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;* 在 `Swift` 中要实例化一个对象可以使用 `类名()` 的格式，与 `OC` 中的 `alloc/init` 等价
* `OC` 中的 `initWithXXX` 在 `Swift` 中通常可以使用 `类名(XXX: )` 找到对应的函数
* `OC` 中的 `[UIColor redColor]` 类方法，在 `Swift` 中通常可以使用 `类名.XXX` 找到对应的函数
* 使用 `let` 修饰 `v` 并且赋值，表示 `该常量的内存地址不允许修改，但是可以修改其内部的属性`
* 当前对象的属性，不需要使用 `self.`
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;常量&amp;amp;变量的使用原则：尽量先用 let，只有需要变的时候，再用 var，能够更加安全&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;变量类型&quot;&gt;&lt;a href=&quot;#变量类型&quot; class=&quot;headerlink&quot; title=&quot;变量类型&quot;&gt;&lt;/a&gt;变量类型&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;10.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; z: &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;(x) + y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(x + &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(y))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(y + z)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;* 初次接触 `Swift` 中会因为简单的 `var` `let` 误以为 `Swift` 中的类型非常松散
* 其实所有变量的准确类型都是在赋值的同时自动推导的
* `Swift`  是对类型要求非常严格的一门语言，`一个值永远不会被自动转换成其他类型`
* 如果要转换，必须显示转换，Swift 中
    * 小数默认是 `Double` 类型
    * 整数默认是 `Int` 类型
* 如果要显式的指定变量的类型，可以在定义是使用 `var 变量名: 类型 = 值`
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;常量-amp-变量&quot;&gt;&lt;a href=&quot;#常量-amp-变量&quot; class=&quot;headerlink&quot; title=&quot;常量&amp;amp;变量&quot;&gt;&lt;/a&gt;常量&amp;amp;变量&lt;/h1&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
      <category term="swift基础" scheme="http://yoursite.com/categories/swift%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
</feed>
